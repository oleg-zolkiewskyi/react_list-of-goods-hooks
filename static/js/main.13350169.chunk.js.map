{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","NONE","sortType","setType","isReversed","setReverse","goods","visibleGoods","sort","g1","g2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","rev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCL,oBAAS,GAA1C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEMC,EA/BR,SACEA,EACAJ,EACAE,GAEA,IAAMG,EAAY,YAAOD,GAczB,OAZAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKP,EAASgB,QACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITV,EACKG,EAAaQ,UAGfR,EAQOS,CAAkBpB,EAAiBM,EAAUE,GAE3D,OACE,sBAAKa,UAAU,wBAAf,WAEIlB,GACA,wBACEmB,KAAK,SACLD,UAAU,qBACVE,QAAS,WACPnB,GAAS,IAJb,mBAWDD,GACC,qCACE,sBAAKkB,UAAU,sBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVE,QAAS,WACPhB,EAAQR,EAASgB,UAJrB,iCAUA,wBACEO,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPhB,EAAQR,EAASkB,SAJrB,4BAUA,wBACEK,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPd,GAAW,SAAAe,GAAG,OAAKA,MAJvB,qBAUA,wBACEF,KAAK,SACLD,UAAU,mBACVE,QAAS,WACPhB,EAAQR,EAASM,MACjBI,GAAW,IALf,sBAYF,oBAAIY,UAAU,QAAd,SACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEEL,UAAU,iCAFZ,SAIGK,GAHIA,eCpHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13350169.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [sortType, setType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App has-text-centered\">\n\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success \"\n          onClick={() => {\n            setStart(true);\n          }}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <div className=\"button  level-item \">\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => {\n                setType(SortType.ALPABET);\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-success\"\n              onClick={() => {\n                setType(SortType.LENGTH);\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-warning\"\n              onClick={() => {\n                setReverse(rev => !rev);\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => {\n                setType(SortType.NONE);\n                setReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n\n          <ul className=\"Goods\">\n            {goods.map(good => (\n              <li\n                key={good}\n                className=\"Goods__item has-text-centered \"\n              >\n                {good}\n\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}