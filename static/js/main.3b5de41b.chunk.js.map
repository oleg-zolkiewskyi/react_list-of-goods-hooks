{"version":3,"sources":["Component.tsx/ListOfGoods.tsx","App.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","useState","NONE","sortType","setType","isReversed","setReverse","goodsList","visibleGoods","sort","g1","g2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","rev","map","good","goodsFromServer","App","isStarted","setStart","ReactDOM","render","document","getElementById"],"mappings":"6KAEKA,E,8DAAAA,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAoCE,IAAMC,EAA+B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAC7C,EAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA9BR,SACEP,EACAG,EACAE,GAEA,IAAMG,EAAY,YAAOR,GAczB,OAZAQ,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKL,EAASc,QACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKb,EAASgB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITV,EACKG,EAAaQ,UAGfR,EAOWS,CAAkBjB,EAAOG,EAAUE,GAErD,OACE,qCACE,sBAAKa,UAAU,sBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVE,QAAS,WACPhB,EAAQN,EAASc,UAJrB,iCAUA,wBACEO,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPhB,EAAQN,EAASgB,SAJrB,4BAUA,wBACEK,KAAK,SACLD,UAAU,oBACVE,QAAS,WACPd,GAAW,SAAAe,GAAG,OAAKA,MAJvB,qBAUA,wBACEF,KAAK,SACLD,UAAU,mBACVE,QAAS,WACPhB,EAAQN,EAASI,MACjBI,GAAW,IALf,sBAYF,oBAAIY,UAAU,QAAd,SACGX,EAAUe,KAAI,SAAAC,GAAI,OACjB,oBAEEL,UAAU,iCAFZ,SAIGK,GAHIA,YCvFXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA8BxB,oBAAS,GAAvC,mBAAOyB,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKT,UAAU,wBAAf,WAEIQ,GACA,wBACEP,KAAK,SACLD,UAAU,qBACVE,QAAS,WACPO,GAAS,IAJb,mBAWDD,GACC,cAAC,EAAD,CAAa1B,MAAOwB,QClC5BI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b5de41b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype Props = {\n  goods: string[],\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }: Props) => {\n  const [sortType, setType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const goodsList = getReorderedGoods(goods, sortType, isReversed);\n\n  return (\n    <>\n      <div className=\"button  level-item \">\n        <button\n          type=\"button\"\n          className=\"button is-link\"\n          onClick={() => {\n            setType(SortType.ALPABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-success\"\n          onClick={() => {\n            setType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-warning\"\n          onClick={() => {\n            setReverse(rev => !rev);\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger\"\n          onClick={() => {\n            setType(SortType.NONE);\n            setReverse(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul className=\"Goods\">\n        {goodsList.map(good => (\n          <li\n            key={good}\n            className=\"Goods__item has-text-centered \"\n          >\n            {good}\n\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { ListOfGoods } from './Component.tsx/ListOfGoods';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n\n  return (\n    <div className=\"App has-text-centered\">\n\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success \"\n          onClick={() => {\n            setStart(true);\n          }}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <ListOfGoods goods={goodsFromServer} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}